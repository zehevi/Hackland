<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.spr = -1;
global.mirror = 1;
global.fname = "";
global.dir = environment_get_variable("DESKTOP");//working_directory;
global.surf = surface_create(64,64);
global.removeBack = 1;
global.crop = 0;
global.crop_x = 0;
global.crop_y = 0;
global.crop_x2 = 0;
global.crop_y2 = 0;
draw_set_font(fnt_ariel);

texture_set_interpolation(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.crop)
{
    if(mouse_check_button_pressed(mb_left) &amp;&amp; mouse_y&lt;512)
    {
        global.crop_x = mouse_x;
        global.crop_y = min(mouse_y,room_height-64);
    }
    if(mouse_check_button_released(mb_left) &amp;&amp; mouse_y&lt;512)
    {
        //cut the image
        global.crop_x2 = mouse_x;
        global.crop_y2 = min(mouse_y,room_height-64);
        if(global.crop_x != global.crop_x2 || global.crop_y != global.crop_y2)
        event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var spw,sph,xoff,yoff,w;
spw = sprite_get_width(global.spr);
sph = sprite_get_height(global.spr);
ws = (global.crop_x2-global.crop_x)*(spw/512);
hs = (global.crop_y2-global.crop_y)*(sph/512);
//w = 64 / max(spw,sph);
w = 64 / (max(ws,hs));
//w = 64 / ( (global.crop_y2-global.crop_y)*(sph/512) );
xoff = (64*!global.mirror) + ((64 - ws*w)/2*global.mirror);
yoff = (64 - hs*w)/2;
//scale = 64/(spw+(global.crop_x2-global.crop_x)*(spw/512));

surface_set_target(global.surf);
draw_clear_alpha(0,0);
draw_sprite_part_ext(global.spr,0,
    global.crop_x*(spw/512),global.crop_y*(sph/512),global.crop_x2*(spw/512),global.crop_y2*(sph/512),
    xoff,yoff,
    w*global.mirror, w,
    c_white,1);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.spr&gt;=0)
{
    draw_set_alpha(0.1);
    draw_sprite_stretched(global.spr,1,0,0,512,512);
    draw_set_alpha(1);
    draw_surface_stretched(global.surf,0,0,room_width,room_height-64);
}

if(global.crop)
{
    draw_set_alpha(0.25);
    draw_line(mouse_x,0,mouse_x,room_height);
    draw_line(0,mouse_y,room_width,mouse_y);
    
    if(mouse_check_button(mb_left))
    {
        draw_rectangle(global.crop_x, global.crop_y,mouse_x,min(mouse_y,room_height-64),0);
    }
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spw = sprite_get_width(global.spr);
draw_text(mouse_x,mouse_y+32,string(mouse_x)+"#"+string(mouse_x/spw)+"#"+string(mouse_x*spw/room_width));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.crop_x = 0;
global.crop_y = 0;
global.crop_x2 = 512;
global.crop_y2 = 512;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
